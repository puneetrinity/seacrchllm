# .env.example - Environment Variables Template
# Copy this file to .env.development, .env.staging, or .env.production
# and update the values according to your environment

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Application settings
APP_NAME="LangGraph Search System"
APP_VERSION="2.0.0-langgraph"
DEBUG=true
LOG_LEVEL=INFO

# Server configuration
HOST=0.0.0.0
PORT=8000
WORKERS=1
RELOAD=true

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL primary database
DATABASE_URL=postgresql://langgraph_user:langgraph_pass@localhost:5432/langgraph_search

# Database pool settings
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600
DB_ECHO=false

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis for caching and sessions
REDIS_URL=redis://localhost:6379/0

# Redis pool settings
REDIS_POOL_SIZE=20
REDIS_SOCKET_TIMEOUT=30
REDIS_SOCKET_CONNECT_TIMEOUT=30
REDIS_RETRY_ON_TIMEOUT=true
REDIS_DECODE_RESPONSES=true

# =============================================================================
# SECURITY & AUTHENTICATION
# =============================================================================

# JWT settings (REQUIRED - Generate a secure 32+ character key)
JWT_SECRET_KEY=your-super-secret-jwt-key-min-32-chars-long

# JWT expiration times (in seconds)
JWT_ACCESS_TOKEN_EXPIRE_SECONDS=3600
JWT_REFRESH_TOKEN_EXPIRE_SECONDS=2592000

# CORS settings
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
CORS_ALLOW_CREDENTIALS=true

# Rate limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# =============================================================================
# SEARCH ENGINE API KEYS (At least one required)
# =============================================================================

# Brave Search API (Recommended primary search engine)
BRAVE_SEARCH_API_KEY=your-brave-search-api-key

# SerpAPI (Google search results)
SERPAPI_API_KEY=your-serpapi-key

# ZenRows (Web scraping with proxy rotation)
ZENROWS_API_KEY=your-zenrows-api-key

# Bing Search API
BING_SEARCH_API_KEY=your-bing-search-api-key

# DuckDuckGo (No API key required, but rate limited)
DUCKDUCKGO_ENABLED=true

# =============================================================================
# LLM PROVIDER API KEYS (At least one required)
# =============================================================================

# OpenAI API (GPT-4, GPT-3.5, embeddings)
OPENAI_API_KEY=your-openai-api-key
OPENAI_ORG_ID=your-openai-org-id

# Anthropic API (Claude models)
ANTHROPIC_API_KEY=your-anthropic-api-key

# Google AI API (Gemini models)
GOOGLE_AI_API_KEY=your-google-ai-api-key

# Cohere API (embeddings and generation)
COHERE_API_KEY=your-cohere-api-key

# Hugging Face API (open source models)
HUGGINGFACE_API_KEY=your-hf-api-key

# Local model settings (Ollama)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_ENABLED=false

# =============================================================================
# VECTOR DATABASE CONFIGURATION (Optional)
# =============================================================================

# Pinecone (Vector database for semantic search)
PINECONE_API_KEY=your-pinecone-api-key
PINECONE_ENVIRONMENT=your-pinecone-environment
PINECONE_INDEX_NAME=langgraph-search

# Weaviate (Alternative vector database)
WEAVIATE_URL=http://localhost:8080
WEAVIATE_API_KEY=your-weaviate-api-key

# Qdrant (Alternative vector database)
QDRANT_URL=http://localhost:6333
QDRANT_API_KEY=your-qdrant-api-key

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Prometheus metrics
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=8080

# Grafana (if using external Grafana)
GRAFANA_URL=http://localhost:3000
GRAFANA_API_KEY=your-grafana-api-key

# Elasticsearch for logging (Optional)
ELASTICSEARCH_HOSTS=["http://localhost:9200"]
ELASTICSEARCH_USERNAME=elastic
ELASTICSEARCH_PASSWORD=changeme

# Jaeger tracing (Optional)
JAEGER_ENABLED=false
JAEGER_AGENT_HOST=localhost
JAEGER_AGENT_PORT=6831

# =============================================================================
# CLOUD SERVICES (Optional)
# =============================================================================

# AWS services (S3, CloudWatch, etc.)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_DEFAULT_REGION=us-east-1
AWS_S3_BUCKET=langgraph-search-bucket

# Google Cloud Platform
GOOGLE_APPLICATION_CREDENTIALS=/path/to/gcp-service-account.json
GCP_PROJECT_ID=your-gcp-project-id

# Azure services
AZURE_STORAGE_CONNECTION_STRING=your-azure-connection-string
AZURE_STORAGE_CONTAINER_NAME=langgraph-search

# =============================================================================
# NOTIFICATION SERVICES (Optional)
# =============================================================================

# Slack notifications
SLACK_WEBHOOK_URL=your-slack-webhook-url
SLACK_CHANNEL=#langgraph-alerts

# Email notifications (SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-email-password
SMTP_USE_TLS=true
SMTP_FROM_EMAIL=noreply@yourdomain.com

# Discord webhooks
DISCORD_WEBHOOK_URL=your-discord-webhook-url

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable features
FEATURE_VECTOR_SEARCH=true
FEATURE_REAL_TIME_STREAMING=true
FEATURE_ANALYTICS_DASHBOARD=true
FEATURE_A_B_TESTING=true
FEATURE_ADVANCED_CACHING=true
FEATURE_HUMAN_IN_THE_LOOP=false
FEATURE_PREMIUM_PATTERNS=false

# Experimental features
EXPERIMENTAL_SELF_CORRECTING_WORKFLOWS=false
EXPERIMENTAL_MULTI_MODAL_SEARCH=false
EXPERIMENTAL_ADVANCED_REASONING=false

# =============================================================================
# PERFORMANCE & SCALING
# =============================================================================

# Workflow settings
MAX_CONCURRENT_SEARCHES=10
MAX_SEARCH_RESULTS_PER_ENGINE=20
MAX_CONTENT_FETCH_URLS=10
SEARCH_TIMEOUT_SECONDS=30
CONTENT_FETCH_TIMEOUT_SECONDS=10

# Cache settings
CACHE_TTL_SECONDS=3600
CACHE_MAX_SIZE_MB=1024
ENABLE_QUERY_CACHE=true
ENABLE_RESULT_CACHE=true

# Resource limits
MAX_MEMORY_MB=2048
MAX_CPU_PERCENTAGE=80
MAX_DISK_USAGE_MB=10240

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Development helpers
MOCK_EXTERNAL_APIS=false
SEED_DATABASE=true
ENABLE_DEBUG_ENDPOINTS=true
BYPASS_RATE_LIMITING=false

# Testing configuration
TEST_DATABASE_URL=postgresql://test_user:test_pass@localhost:5432/test_langgraph
TEST_REDIS_URL=redis://localhost:6379/1
RUN_INTEGRATION_TESTS=false

# Hot reload settings
RELOAD_PATTERNS=["*.py", "*.yml", "*.yaml", "*.json"]
EXCLUDE_RELOAD_PATTERNS=["__pycache__/*", "*.pyc", ".git/*", "logs/*"]

# =============================================================================
# PRODUCTION OVERRIDES
# =============================================================================

# Production-specific settings (uncomment for production)
# DEBUG=false
# LOG_LEVEL=WARNING
# RELOAD=false
# WORKERS=4
# ENABLE_DEBUG_ENDPOINTS=false
# MOCK_EXTERNAL_APIS=false
# CORS_ORIGINS=["https://yourdomain.com"]

# SSL/TLS settings (production)
# SSL_KEYFILE=/path/to/ssl/private.key
# SSL_CERTFILE=/path/to/ssl/certificate.crt

# =============================================================================
# KUBERNETES & DEPLOYMENT
# =============================================================================

# Kubernetes namespace
K8S_NAMESPACE=langgraph-search

# Health check settings
HEALTH_CHECK_INTERVAL_SECONDS=30
HEALTH_CHECK_TIMEOUT_SECONDS=10
STARTUP_PROBE_DELAY_SECONDS=30

# Resource quotas
MEMORY_REQUEST=512Mi
MEMORY_LIMIT=2Gi
CPU_REQUEST=250m
CPU_LIMIT=1000m

# =============================================================================
# COMPLIANCE & AUDIT
# =============================================================================

# Data governance
DATA_RETENTION_DAYS=90
ENABLE_AUDIT_LOGGING=true
ENABLE_PII_DETECTION=true
ENABLE_GDPR_COMPLIANCE=true

# Security scanning
ENABLE_VULNERABILITY_SCANNING=true
SECURITY_SCAN_INTERVAL_HOURS=24

# =============================================================================
# CUSTOM INTEGRATIONS
# =============================================================================

# Custom webhook endpoints
WEBHOOK_SUCCESS_URL=https://yourapp.com/webhooks/search-success
WEBHOOK_FAILURE_URL=https://yourapp.com/webhooks/search-failure
WEBHOOK_SECRET=your-webhook-secret

# External analytics
GOOGLE_ANALYTICS_ID=GA-XXXXXXXXX
MIXPANEL_TOKEN=your-mixpanel-token

# Custom search engines
CUSTOM_SEARCH_ENGINE_URL=https://api.yoursearch.com
CUSTOM_SEARCH_ENGINE_API_KEY=your-custom-api-key

# =============================================================================
# NOTES & REMINDERS
# =============================================================================

# üîë REQUIRED FOR BASIC FUNCTIONALITY:
#   - DATABASE_URL
#   - REDIS_URL  
#   - JWT_SECRET_KEY
#   - At least one search engine API key
#   - At least one LLM provider API key

# üöÄ RECOMMENDED FOR PRODUCTION:
#   - All monitoring variables
#   - Cloud storage configuration
#   - Notification services
#   - SSL/TLS certificates

# üìù DEVELOPMENT TIPS:
#   - Set DEBUG=true for development
#   - Use MOCK_EXTERNAL_APIS=true to test without API costs
#   - Enable SEED_DATABASE=true for sample data

# üîí SECURITY REMINDERS:
#   - Never commit this file with real secrets
#   - Use environment-specific .env files  
#   - Rotate API keys regularly
#   - Use strong JWT secrets (32+ characters)
#   - Review CORS_ORIGINS for production